<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:cache="http://www.springframework.org/schema/cache" xmlns:c="http://www.springframework.org/schema/c"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <context:annotation-config/>

    <context:component-scan base-package="com.yoreay.ares"/>

    <!--<cache:annotation-driven cache-manager="cacheManager" />-->

    <!--<bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager" c:redisOperations-ref="redisTemplate"/>-->

    <bean id="jedisConnFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:hostName="192.168.1.232"
          p:port="6379"
          p:use-pool="true"/>

    <bean id="redisTemplate"
          class="org.springframework.data.redis.core.RedisTemplate"
          p:connection-factory-ref="jedisConnFactory"/>


    <!--<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager"></bean>-->

    <!--<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">-->
    <!--<property name="cacheManager" ref="cacheManager"/>-->
    <!--<property name="realm" ref="heliosRealm" />-->
    <!--</bean>-->

    <!--<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">-->
    <!--Shiro的核心安全接口,这个属性是必须的 -->
    <!--<property name="securityManager" ref="securityManager"/>-->
    <!--要求登录时的链接(可根据项目的URL进行替换),非必须的属性,默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
    <!--<property name="loginUrl" value="/toLogin"/>-->
    <!--登录成功后要跳转的连接(本例中此属性用不到,因为登录成功后的处理逻辑在LoginController里硬编码为index.jsp了) -->
    <!--<property name="successUrl" value="/login"/>-->
    <!--用户访问未对其授权的资源时,所显示的连接 -->
    <!--<property name="unauthorizedUrl" value="/toLogin"/>-->
    <!--Shiro连接约束配置,即过滤链的定义 -->
    <!--此处可配合我的这篇文章来理解各个过滤连的作用http://blog.csdn.net/jadyer/article/details/12172839 -->
    <!--下面value值的第一个'/'代表的路径是相对于HttpServletRequest.getContextPath()的值来的 -->
    <!--anon：它对应的过滤器里面是空的,什么都没做,这里.do和.jsp后面的*表示参数,比方说login.jsp?main这种 -->
    <!--authc：该过滤器下的页面必须验证后才能访问,它是Shiro内置的一个拦截器org.apache.shiro.web.filter.authc.FormAuthenticationFilter -->
    <!--<property name="filterChainDefinitions">-->
    <!--<value>-->
    <!--/login=anon-->
    <!--/logout=anon-->
    <!--/register=anon-->
    <!--/*=authc-->
    <!--</value>-->
    <!--</property>-->
    <!--</bean>-->
</beans>